version: '3'
services:
  graphql_redis:
    container_name: reactjstampabay_graphql_redis
    restart: always
    image: "redis"
    ports:
        - "64000:6379"
  graphql_postgres:
    container_name: reactjstampabay_graphql_postgres
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=graphql
    image: "mdillon/postgis"
    ports:
        - "64001:5432"
  graphql:
    container_name: reactjstampabay_graphql
    build: .
    depends_on:
      - graphql_postgres
      - graphql_redis
    links:
      - graphql_postgres
      - graphql_redis
    ports: 
      - 64002:9000
      - 64003:3000
      - 64004:5858
    volumes:
      - ./server:/graphql/server
      - ./client/public:/graphql/client/public
      - ./client/src:/graphql/client/src
      - ./client/build:/graphql/client/build
      - ./build:/graphql/build
      - ./package.json:/graphql/package.json
      - ./yarn.lock:/graphql/yarn.lock
      - ./client/package.json:/graphql/client/package.json
      - ./client/yarn.lock:/graphql/client/yarn.lock
    environment:
      REACT_APP_API_ROOT: http://localhost:64002
      REACT_APP_REDUX_LOGGING_ENABLED: "true"
      API_SECRET: shhhh
      DATABASE_URL: postgres://postgres:password@graphql_postgres:5432/graphql
      REDIS_URL: redis://graphql_redis:6379
      REDIS_USER_SESSIONS_DB: 1
      RECREATE_SCHEMA: "true"
    command: ["./wait-for-it.sh", "graphql_postgres:5432", "--", "npm", "run", "develop:docker"]
    restart: always